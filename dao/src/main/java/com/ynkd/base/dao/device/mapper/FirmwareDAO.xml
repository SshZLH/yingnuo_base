<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ynkd.base.dao.device.FirmwareDAO">
  <resultMap id="BaseResultMap" type="com.ynkd.base.model.device.Firmware">
    <id column="firmware_id" jdbcType="INTEGER" property="firmwareId" />
    <result column="firmware_name" jdbcType="VARCHAR" property="firmwareName" />
    <result column="firmware_version" jdbcType="VARCHAR" property="firmwareVersion" />
    <result column="firmware_path" jdbcType="VARCHAR" property="firmwarePath" />
    <result column="firmware_status" jdbcType="INTEGER" property="firmwareStatus" />
    <result column="firmware_type" jdbcType="VARCHAR" property="firmwareType" />
    <result column="firmware_memo" jdbcType="VARCHAR" property="firmwareMemo" />
    <result column="id_delete" jdbcType="VARCHAR" property="idDelete" />
    <result column="create_at" jdbcType="VARCHAR" property="createAt" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_at" jdbcType="VARCHAR" property="updateAt" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    firmware_id, firmware_name, firmware_version, firmware_path, firmware_status, firmware_type, 
    firmware_memo, id_delete, create_at, create_by, update_at, update_by
  </sql>
  <select id="selectByExample" parameterType="com.ynkd.base.model.device.FirmwareExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from firmware
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from firmware
    where firmware_id = #{firmwareId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from firmware
    where firmware_id = #{firmwareId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ynkd.base.model.device.FirmwareExample">
    delete from firmware
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ynkd.base.model.device.Firmware">
    insert into firmware (firmware_id, firmware_name, firmware_version, 
      firmware_path, firmware_status, firmware_type, 
      firmware_memo, id_delete, create_at, 
      create_by, update_at, update_by
      )
    values (#{firmwareId,jdbcType=INTEGER}, #{firmwareName,jdbcType=VARCHAR}, #{firmwareVersion,jdbcType=VARCHAR}, 
      #{firmwarePath,jdbcType=VARCHAR}, #{firmwareStatus,jdbcType=INTEGER}, #{firmwareType,jdbcType=VARCHAR}, 
      #{firmwareMemo,jdbcType=VARCHAR}, #{idDelete,jdbcType=VARCHAR}, #{createAt,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{updateAt,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ynkd.base.model.device.Firmware">
    insert into firmware
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="firmwareId != null">
        firmware_id,
      </if>
      <if test="firmwareName != null">
        firmware_name,
      </if>
      <if test="firmwareVersion != null">
        firmware_version,
      </if>
      <if test="firmwarePath != null">
        firmware_path,
      </if>
      <if test="firmwareStatus != null">
        firmware_status,
      </if>
      <if test="firmwareType != null">
        firmware_type,
      </if>
      <if test="firmwareMemo != null">
        firmware_memo,
      </if>
      <if test="idDelete != null">
        id_delete,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="firmwareId != null">
        #{firmwareId,jdbcType=INTEGER},
      </if>
      <if test="firmwareName != null">
        #{firmwareName,jdbcType=VARCHAR},
      </if>
      <if test="firmwareVersion != null">
        #{firmwareVersion,jdbcType=VARCHAR},
      </if>
      <if test="firmwarePath != null">
        #{firmwarePath,jdbcType=VARCHAR},
      </if>
      <if test="firmwareStatus != null">
        #{firmwareStatus,jdbcType=INTEGER},
      </if>
      <if test="firmwareType != null">
        #{firmwareType,jdbcType=VARCHAR},
      </if>
      <if test="firmwareMemo != null">
        #{firmwareMemo,jdbcType=VARCHAR},
      </if>
      <if test="idDelete != null">
        #{idDelete,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ynkd.base.model.device.FirmwareExample" resultType="java.lang.Long">
    select count(*) from firmware
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update firmware
    <set>
      <if test="record.firmwareId != null">
        firmware_id = #{record.firmwareId,jdbcType=INTEGER},
      </if>
      <if test="record.firmwareName != null">
        firmware_name = #{record.firmwareName,jdbcType=VARCHAR},
      </if>
      <if test="record.firmwareVersion != null">
        firmware_version = #{record.firmwareVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.firmwarePath != null">
        firmware_path = #{record.firmwarePath,jdbcType=VARCHAR},
      </if>
      <if test="record.firmwareStatus != null">
        firmware_status = #{record.firmwareStatus,jdbcType=INTEGER},
      </if>
      <if test="record.firmwareType != null">
        firmware_type = #{record.firmwareType,jdbcType=VARCHAR},
      </if>
      <if test="record.firmwareMemo != null">
        firmware_memo = #{record.firmwareMemo,jdbcType=VARCHAR},
      </if>
      <if test="record.idDelete != null">
        id_delete = #{record.idDelete,jdbcType=VARCHAR},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=VARCHAR},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update firmware
    set firmware_id = #{record.firmwareId,jdbcType=INTEGER},
      firmware_name = #{record.firmwareName,jdbcType=VARCHAR},
      firmware_version = #{record.firmwareVersion,jdbcType=VARCHAR},
      firmware_path = #{record.firmwarePath,jdbcType=VARCHAR},
      firmware_status = #{record.firmwareStatus,jdbcType=INTEGER},
      firmware_type = #{record.firmwareType,jdbcType=VARCHAR},
      firmware_memo = #{record.firmwareMemo,jdbcType=VARCHAR},
      id_delete = #{record.idDelete,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=VARCHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_at = #{record.updateAt,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ynkd.base.model.device.Firmware">
    update firmware
    <set>
      <if test="firmwareName != null">
        firmware_name = #{firmwareName,jdbcType=VARCHAR},
      </if>
      <if test="firmwareVersion != null">
        firmware_version = #{firmwareVersion,jdbcType=VARCHAR},
      </if>
      <if test="firmwarePath != null">
        firmware_path = #{firmwarePath,jdbcType=VARCHAR},
      </if>
      <if test="firmwareStatus != null">
        firmware_status = #{firmwareStatus,jdbcType=INTEGER},
      </if>
      <if test="firmwareType != null">
        firmware_type = #{firmwareType,jdbcType=VARCHAR},
      </if>
      <if test="firmwareMemo != null">
        firmware_memo = #{firmwareMemo,jdbcType=VARCHAR},
      </if>
      <if test="idDelete != null">
        id_delete = #{idDelete,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where firmware_id = #{firmwareId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ynkd.base.model.device.Firmware">
    update firmware
    set firmware_name = #{firmwareName,jdbcType=VARCHAR},
      firmware_version = #{firmwareVersion,jdbcType=VARCHAR},
      firmware_path = #{firmwarePath,jdbcType=VARCHAR},
      firmware_status = #{firmwareStatus,jdbcType=INTEGER},
      firmware_type = #{firmwareType,jdbcType=VARCHAR},
      firmware_memo = #{firmwareMemo,jdbcType=VARCHAR},
      id_delete = #{idDelete,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_at = #{updateAt,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where firmware_id = #{firmwareId,jdbcType=INTEGER}
  </update>
</mapper>