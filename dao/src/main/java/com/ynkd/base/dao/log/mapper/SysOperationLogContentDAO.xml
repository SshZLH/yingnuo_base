<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ynkd.base.dao.log.SysOperationLogContentDAO">
  <resultMap id="BaseResultMap" type="com.ynkd.base.model.log.SysOperationLogContent">
    <id column="logcon_id" jdbcType="VARCHAR" property="logconId" />
    <result column="log_id" jdbcType="VARCHAR" property="logId" />
    <result column="logcon_key" jdbcType="VARCHAR" property="logconKey" />
    <result column="logcon_value" jdbcType="VARCHAR" property="logconValue" />
    <result column="old_value" jdbcType="VARCHAR" property="oldValue" />
    <result column="new_value" jdbcType="VARCHAR" property="newValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    logcon_id, log_id, logcon_key, logcon_value, old_value, new_value
  </sql>
  <select id="selectByExample" parameterType="com.ynkd.base.model.log.SysOperationLogContentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_operation_log_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_operation_log_content
    where logcon_id = #{logconId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_operation_log_content
    where logcon_id = #{logconId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ynkd.base.model.log.SysOperationLogContentExample">
    delete from sys_operation_log_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ynkd.base.model.log.SysOperationLogContent">
    insert into sys_operation_log_content (logcon_id, log_id, logcon_key, 
      logcon_value, old_value, new_value
      )
    values (#{logconId,jdbcType=VARCHAR}, #{logId,jdbcType=VARCHAR}, #{logconKey,jdbcType=VARCHAR}, 
      #{logconValue,jdbcType=VARCHAR}, #{oldValue,jdbcType=VARCHAR}, #{newValue,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ynkd.base.model.log.SysOperationLogContent">
    insert into sys_operation_log_content
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logconId != null">
        logcon_id,
      </if>
      <if test="logId != null">
        log_id,
      </if>
      <if test="logconKey != null">
        logcon_key,
      </if>
      <if test="logconValue != null">
        logcon_value,
      </if>
      <if test="oldValue != null">
        old_value,
      </if>
      <if test="newValue != null">
        new_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logconId != null">
        #{logconId,jdbcType=VARCHAR},
      </if>
      <if test="logId != null">
        #{logId,jdbcType=VARCHAR},
      </if>
      <if test="logconKey != null">
        #{logconKey,jdbcType=VARCHAR},
      </if>
      <if test="logconValue != null">
        #{logconValue,jdbcType=VARCHAR},
      </if>
      <if test="oldValue != null">
        #{oldValue,jdbcType=VARCHAR},
      </if>
      <if test="newValue != null">
        #{newValue,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ynkd.base.model.log.SysOperationLogContentExample" resultType="java.lang.Long">
    select count(*) from sys_operation_log_content
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_operation_log_content
    <set>
      <if test="record.logconId != null">
        logcon_id = #{record.logconId,jdbcType=VARCHAR},
      </if>
      <if test="record.logId != null">
        log_id = #{record.logId,jdbcType=VARCHAR},
      </if>
      <if test="record.logconKey != null">
        logcon_key = #{record.logconKey,jdbcType=VARCHAR},
      </if>
      <if test="record.logconValue != null">
        logcon_value = #{record.logconValue,jdbcType=VARCHAR},
      </if>
      <if test="record.oldValue != null">
        old_value = #{record.oldValue,jdbcType=VARCHAR},
      </if>
      <if test="record.newValue != null">
        new_value = #{record.newValue,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_operation_log_content
    set logcon_id = #{record.logconId,jdbcType=VARCHAR},
      log_id = #{record.logId,jdbcType=VARCHAR},
      logcon_key = #{record.logconKey,jdbcType=VARCHAR},
      logcon_value = #{record.logconValue,jdbcType=VARCHAR},
      old_value = #{record.oldValue,jdbcType=VARCHAR},
      new_value = #{record.newValue,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ynkd.base.model.log.SysOperationLogContent">
    update sys_operation_log_content
    <set>
      <if test="logId != null">
        log_id = #{logId,jdbcType=VARCHAR},
      </if>
      <if test="logconKey != null">
        logcon_key = #{logconKey,jdbcType=VARCHAR},
      </if>
      <if test="logconValue != null">
        logcon_value = #{logconValue,jdbcType=VARCHAR},
      </if>
      <if test="oldValue != null">
        old_value = #{oldValue,jdbcType=VARCHAR},
      </if>
      <if test="newValue != null">
        new_value = #{newValue,jdbcType=VARCHAR},
      </if>
    </set>
    where logcon_id = #{logconId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ynkd.base.model.log.SysOperationLogContent">
    update sys_operation_log_content
    set log_id = #{logId,jdbcType=VARCHAR},
      logcon_key = #{logconKey,jdbcType=VARCHAR},
      logcon_value = #{logconValue,jdbcType=VARCHAR},
      old_value = #{oldValue,jdbcType=VARCHAR},
      new_value = #{newValue,jdbcType=VARCHAR}
    where logcon_id = #{logconId,jdbcType=VARCHAR}
  </update>
</mapper>